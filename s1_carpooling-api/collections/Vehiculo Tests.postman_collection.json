{
	"info": {
		"_postman_id": "1ca9a5d5-54a5-4f37-bba2-5f88b491772b",
		"name": "Vehiculo Tests",
		"description": "Tests de los recursos de viaje recurrente: post, get, put y delete.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un conductor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cec34a34-e095-45c1-bc9e-96b9749aa93b",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_conductor\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Juan David Mendez\",\n\t\"telefono\": \"3102409786\",\n\t\"correo\": \"jmendez@universidad.com\",\n\t\"numDocumento\": \"10001394020\",\n\t\"contrasenha\": \"kdskdiajnci\",\n\t\"fechaDeNacimiento\": \"1970-11-03T00:00:00-05:00\",\n\t\"tipoDocumento\":\"PASAPORTE\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						""
					]
				},
				"description": "Crea un conductor y lo almacena en la base de datos, se almacena el id para el manejo de las pruebas siguientes.\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear un vehiculo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cec34a34-e095-45c1-bc9e-96b9749aa93b",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_vehiculo1\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"soat\": \"RWSNFJ12395837\",\n\t\"placa\": \"MDS 546\",\n\t\"aseguradora\": \"SURA\",\n\t\"vigenciaSoat\": \"11/10/2020\",\n\t\"modelo\": \"Chevrolet Spark\",\n\t\"sillas\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos"
					]
				},
				"description": "Crea un vehiculo y lo almacena en la base de datos. Es la prueba de un caso valido para el servicio post del recurso. Almacena el id del viaje recurrente para el uso en pruebas siguientes.\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear un vehiculo 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cec34a34-e095-45c1-bc9e-96b9749aa93b",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_vehiculo2\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"soat\": \"AANFJ143779837\",\n\t\"placa\": \"FFO 006\",\n\t\"aseguradora\": \"MAPHRE\",\n\t\"vigenciaSoat\": \"20/09/2020\",\n\t\"modelo\": \"Chevrolet Aveo\",\n\t\"sillas\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos"
					]
				},
				"description": "Crea un vehiculo y lo almacena en la base de datos. Es la prueba de un caso valido para el servicio post del recurso. Almacena el id del viaje recurrente para el uso en pruebas siguientes.\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear un vehiculo con placa invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cec34a34-e095-45c1-bc9e-96b9749aa93b",
						"exec": [
							"tests[\"No crea con placa invalidad\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"La placa tiene que tener 7 caracteres (incluyendo el espacio en la mitad\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"soat\": \"RWSNFJ12395837\",\n\t\"placa\": \"MDS\",\n\t\"aseguradora\": \"SURA\",\n\t\"vigenciaSoat\": \"11/10/2020\",\n\t\"modelo\": \"Chevrolet Spark\",\n\t\"sillas\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos"
					]
				},
				"description": "Es la prueba del servicio post para el recurso en el que se infringe la regla de negocio que verifica que el formato de la placa sea valido, en que los tres primeros caracteres sean letras y los tres ultimos sean numeros. El test se pasa cuando el mensaje de error correcto es recibido. \n\n**Código http esperado: 412**"
			},
			"response": []
		},
		{
			"name": "Crear un vehiculo con placa invalida 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cec34a34-e095-45c1-bc9e-96b9749aa93b",
						"exec": [
							"tests[\"No crea con placa invalidad\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"La placa tiene que tener el formato 'XXX 123'\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"soat\": \"RWSNFJ12395837\",\n\t\"placa\": \"2A3 XG2\",\n\t\"aseguradora\": \"SURA\",\n\t\"vigenciaSoat\": \"11/10/2020\",\n\t\"modelo\": \"Chevrolet Spark\",\n\t\"sillas\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos"
					]
				},
				"description": "Es la prueba del servicio post para el recurso en el que se infringe la regla de negocio que verifica que el formato de la placa sea valido, en que haya un espacio entre los tres primeros caracteres y los tres, y que el numero de caracteres sea correcto. El test se pasa cuando el mensaje de error correcto es recibido. \n\n**Código http esperado: 412**"
			},
			"response": []
		},
		{
			"name": "Crear un vehiculo con sillas invalidas",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cec34a34-e095-45c1-bc9e-96b9749aa93b",
						"exec": [
							"tests[\"No crea con placa invalidad\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El vehiculo tienen que tener entre 1 y 10 sillas\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"soat\": \"RWSNFJ12395837\",\n\t\"placa\": \"XSQ 999\",\n\t\"aseguradora\": \"SURA\",\n\t\"vigenciaSoat\": \"11/10/2020\",\n\t\"modelo\": \"Chevrolet Spark\",\n\t\"sillas\": -1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos"
					]
				},
				"description": "Es la prueba del servicio post para el recurso en el que se infringe la regla de negocio que verifica el limite minimo y maximo de numero de sillas. El test se pasa cuando el mensaje de error correcto es recibido. \n\n**Código http esperado: 412**"
			},
			"response": []
		},
		{
			"name": "Obtener vehiculos de un conductor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2a3f62c2-12eb-4e93-94c9-1608acc05a8d",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"vehiculos count\"] = data.length > 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos"
					]
				},
				"description": "Es la prueba del servicio get para el recurso en el que se recupera exitosamente todos los vehiculos de un conductor. El test se pasa cuando el mensaje correcto es recibido y recibe mas de una calificacion. \n\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un vehiculo de un conductor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2a3f62c2-12eb-4e93-94c9-1608acc05a8d",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos/{{new_id_vehiculo1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos",
						"{{new_id_vehiculo1}}"
					]
				},
				"description": "Es la prueba del servicio get para el recurso en el que se recupera exitosamente un vehiculo de un conductor. El test se pasa cuando el mensaje correcto es recibido. \n\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un vehiculo de un conductor inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2a3f62c2-12eb-4e93-94c9-1608acc05a8d",
						"exec": [
							"tests[\"No existe el recurso\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /conductores/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/0/vehiculos/{{new_id_vehiculo1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"0",
						"vehiculos",
						"{{new_id_vehiculo1}}"
					]
				},
				"description": "Es la prueba del servicio get para el recurso en el caso en que se intenta obtener un vehiculo de un conductor inexistente. El test se pasa cuando el mensaje de error correcto es recibido. \n\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener un vehiculo inexistente de un conductor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2a3f62c2-12eb-4e93-94c9-1608acc05a8d",
						"exec": [
							"tests[\"No existe el recurso\"] = responseCode.code === 404;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos",
						"0"
					]
				},
				"description": "Es la prueba del servicio get para el recurso en el caso en que se intenta obtener un vehiculo inexistente. El test se pasa cuando el mensaje de error correcto es recibido. \n\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Editar un vehiculo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5ce2f2f-b592-4c8e-ae7e-8ba30d8230d3",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\":\"{{new_id_vehiculo2}}\",\n\t\"soat\": \"AANFJ143779837\",\n\t\"placa\": \"FFO 006\",\n\t\"aseguradora\": \"SERRANOSEGUROS\",\n\t\"vigenciaSoat\": \"20/09/2020\",\n\t\"modelo\": \"Chevrolet Aveo\",\n\t\"sillas\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos/{{new_id_vehiculo2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos",
						"{{new_id_vehiculo2}}"
					]
				},
				"description": "Modifica un vehiculo existente y el cambio se guarda en la base de datos. Es la prueba de un caso valido para el servicio put del recurso. \n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editar un vehiculo inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5ce2f2f-b592-4c8e-ae7e-8ba30d8230d3",
						"exec": [
							"tests[\"No existe el recurso\"] = responseCode.code === 404;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\":0,\n\t\"soat\": \"AANFJ143779837\",\n\t\"placa\": \"FFO 006\",\n\t\"aseguradora\": \"SERRANOSEGUROS\",\n\t\"vigenciaSoat\": \"20/09/2020\",\n\t\"modelo\": \"Chevrolet Aveo\",\n\t\"sillas\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos",
						"0"
					]
				},
				"description": "Es la prueba del servicio put para el recurso en el caso en que se intenta modificar un vehiculo inexistente. El test se pasa cuando el mensaje de error correcto es recibido. \n\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un vehiculo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "444c66cc-7bb8-4680-8d9c-05cec471bee1",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos/{{new_id_vehiculo1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos",
						"{{new_id_vehiculo1}}"
					]
				},
				"description": "Elimina un vehiculo existente y el cambio se guarda en la base de datos. Es la prueba de un caso valido para el servicio delete del recurso. \n**Código http esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un vehiculo 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "444c66cc-7bb8-4680-8d9c-05cec471bee1",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos/{{new_id_vehiculo2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos",
						"{{new_id_vehiculo2}}"
					]
				},
				"description": "Elimina un vehiculo existente y el cambio se guarda en la base de datos. Es la prueba de un caso valido para el servicio delete del recurso. \n**Código http esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un vehiculo inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "444c66cc-7bb8-4680-8d9c-05cec471bee1",
						"exec": [
							"tests[\"No existe el recurso\"] = responseCode.code === 404;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}/vehiculos/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}",
						"vehiculos",
						"0"
					]
				},
				"description": "Es la prueba del servicio put para el recurso en el caso en que se intenta eilimar un vehiculo inexistente. El test se pasa cuando el mensaje de error correcto es recibido. \n\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un conductor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "444c66cc-7bb8-4680-8d9c-05cec471bee1",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_carpooling-api/api/conductores/{{new_id_conductor}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_carpooling-api",
						"api",
						"conductores",
						"{{new_id_conductor}}"
					]
				},
				"description": "Se borra el conductor original\n\n\n**Código http esperado: 204**"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}